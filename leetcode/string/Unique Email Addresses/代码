//自己的代码
class Solution {
public:
    int numUniqueEmails(vector<string>& emails) {
        int size=emails.size();
        vector<string> str;
        for(int i=0;i<size;i++)
        {
            
            string n=emails[i];
            int q=n.find('@');
            
            string m=n.substr(0,q);
            
            m.erase(std::remove(m.begin(),m.end(),'.'),m.end());
            
            int p=m.find('+');
            m=m.substr(0,p-1);
            string domain=n.substr(q);
            m=m+domain;
            bool flag=1;
            for(int j=0;j<str.size();j++)
            {
                if(m.compare(str[j])==0)
                    flag=0;  
            }
            if(flag)
               str.push_back(m);
        }
        
        return str.size();
    
    }
};  


//效果好的代码
class Solution {
public:
    int numUniqueEmails(vector<string>& emails) {
        int count=0;
        unordered_set<string> storage;
        for(auto email:emails){
            string temp("");
            bool before=true;
            for(int i=0;i<email.length();i++){
                if(before){
                    if(email[i]=='.') i++;
                    if(email[i]=='+'){while(email[i]!='@'){i++;}}
                    if(email[i]=='@') before=false;
                }
                temp+=email[i];
            }
            if(storage.find(temp)==storage.end()) count++;
            storage.insert(temp);
        }
        return count;


}
};
