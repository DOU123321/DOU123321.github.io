这道题就是求朋友圈的个数，题目中对于朋友圈的定义是可以传递的。
1.那么比较直接的解法就是DFS搜索，对于某个人，遍历其好友，然后再遍历其好友的好友，那么我们就能把属于同一个朋友圈的人都遍历一遍，
我们同时标记出已经遍历过的人，然后累积朋友圈的个数，再去对于没有遍历到的人在找其朋友圈的人，这样就能求出个数。
2.也可利用BFS进行求解，与上述方法类似。
3.利用联合查找Union Find，也是一种很经典的解题思路，核心思想是初始时给每一个对象都赋上不同的标签，
然后对于属于同一类的对象，在root中查找其标签，如果不同，那么将其中一个对象的标签赋值给另一个对象，
注意root数组中的数字跟数字的坐标是有很大关系的，root存的是属于同一组的另一个对象的坐标，这样通过getRoot函数可以使同一个组的对象返回相同的值。




知识点：
1.STL中的队列（queue）：
基本操作：
push(x) 将x压入队列的末端
pop() 弹出队列的第一个元素(队顶元素)，注意此函数并不返回任何值
front() 返回第一个元素(队顶元素)
back() 返回最后被压入的元素(队尾元素)
empty() 当队列为空时，返回true
size() 返回队列的长度

使用方法：
头文件：
#include <queue>
声明方法：
1、普通声明
queue<int>q;
2、结构体
struct node
{    
   int x, y;
};
queue<node>q;




